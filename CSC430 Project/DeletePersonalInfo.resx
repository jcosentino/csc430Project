<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDORXhpZgAATU0AKgAAAAgAAwE7AAIAAAARAAAAModpAAQAAAAB
        AAAARJydAAEAAAAiAAAApAAAAABNaWNoZWxsZSBLdXNobmlyAAAABJADAAIAAAAUAAAAepAEAAIAAAAU
        AAAAjpKRAAIAAAADODEAAJKSAAIAAAADODEAAAAAAAAyMDE2OjExOjExIDE0OjMxOjI0ADIwMTY6MTE6
        MTEgMTQ6MzE6MjQAAABNAGkAYwBoAGUAbABsAGUAIABLAHUAcwBoAG4AaQByAAAA/9sAQwAHBQUGBQQH
        BgUGCAcHCAoRCwoJCQoVDxAMERgVGhkYFRgXGx4nIRsdJR0XGCIuIiUoKSssKxogLzMvKjInKisq/9sA
        QwEHCAgKCQoUCwsUKhwYHCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
        KioqKioq/8AAEQgAsgFTAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//E
        ALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYX
        GBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SV
        lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5
        +v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
        BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJ
        SlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5
        usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A9Jh0wwxm6mBe
        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
</value>
  </data>
</root>